/*
 * Copyright 2019 Immutables Authors and Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.immutables.criteria.expression;

import javax.annotation.Nullable;

/**
 * Expression is a <a href="https://cs.lmu.edu/~ray/notes/ir/">Intermediate Representation</a> (IR)
 * generated by criteria DSL (front-end in compiler terminology).
 * <p>
 * Usually, it is represented as <a href="https://en.wikipedia.org/wiki/Abstract_syntax_tree">AST</a>.
 */
public interface Expression {

  @Nullable
  <R, C> R accept(ExpressionBiVisitor<R, C> visitor, @Nullable C context);

  @Nullable
  default <R> R accept(ExpressionVisitor<R> visitor) {
    return accept(Expressions.toBiVisitor(visitor), null);
  }

}
